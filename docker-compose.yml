# Erigon by default is "all in one binary" solution, but it's possible start TxPool as separated processes.
# Same true about: JSON RPC layer (RPCDaemon), p2p layer (Sentry), history download layer (Downloader), consensus.
# Don't start services as separated processes unless you have clear reason for it: resource limiting, scale, replace by your own implementation, security.
# This file is an example: how to start Erigon's services as separated processes.

# Default: --datadir=/home/erigon/.local/share/erigon
# Default UID: 1000
# Default GID: 1000
# Ports: `9090` execution engine (private api), `9091` sentry, `9092` consensus engine, `9093` snapshot downloader, `9094` TxPool
# Ports: `8545` json rpc, `8551` consensus json rpc, `30303` eth p2p protocol, `42069` bittorrent protocol,

# Connections: erigon -> (sentries, downloader), rpcdaemon -> (erigon, txpool), txpool -> erigon

version: '2.2'

# Basic erigon's service

services:
  erigon:
    image: local:erigon
    command:
      - --datadir=/erigon
      - --chain=local
      - --port=30303
      - --http.port=8546
      - --authrpc.port=8552
      - --torrent.port=42068
      - --private.api.addr=127.0.0.1:9091
      - --http
      - --ws
      - --http.api=eth,debug,net,trace,web3,erigon
      - --log.dir.path=/desired/path/to/logs
      - --log.dir.prefix=filename
    ports:
      - "8551:8551"
      - "8546:8546"
      - "9091:9091"
      - "42068:42068"
      - "30304:30303"
    volumes:
      # It's ok to mount sub-dirs of "datadir" to different drives
      - ./zDataHome/erigon:/erigon
    restart: unless-stopped
    mem_swappiness: 0
#    user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}



